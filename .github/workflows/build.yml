name: Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Compile&Package
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23  # Set your desired Go version

      - name: Install Dependencies
        run: cd server/ && go mod tidy

      - name: Build for ${{ matrix.os }}-${{ matrix.arch }}
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          mkdir -p dist/${{ matrix.os }}-${{ matrix.arch }}
          output_name=lenverse-${{ matrix.os }}-${{ matrix.arch }}
          if [ "${{ matrix.os }}" == "windows" ]; then
            output_name=$output_name.exe
          fi
          cd server/
          go build -o ../dist/${{ matrix.os }}-${{ matrix.arch }}/$output_name
          
      - name: Copy Files
        run: |
          cp -r ./config dist/${{ matrix.os }}-${{ matrix.arch }}/ || true
          cp songs/AmazingGrace.txt index.html songs.html lists.html verses.html main.html README.md script.js stage.html style.css favicon.png dist/${{ matrix.os }}-${{ matrix.arch }}/ || true

      - name: Create ZIP
        run: |
          cd dist/${{ matrix.os }}-${{ matrix.arch }}
          zip -r ../${{ matrix.os }}-${{ matrix.arch }}.zip ./*
          cd ../..

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packaged-binaries
          path: dist/*.zip
